(0000) 3000  0011000000000000 (   1)                 .ORIG x3000
(3000) 2CEC  0010110011101100 (   4)                 LD    R6 STACK_PTR
(3001) 54A0  0101010010100000 (   5)                 AND   R2 R2 #0
(3002) 56E0  0101011011100000 (   6)                 AND   R3 R3 #0
(3003) 4804  0100100000000100 (   9)                 JSR   READ_SCORES
(3004) 4835  0100100000110101 (  11) STACK           JSR   PROCESS_STACK
(3005) 484F  0100100001001111 (  13) AVERAGE         JSR   CALCULATE_AVERAGE
(3006) 4857  0100100001010111 (  14)                 JSR   DISPLAY_RESULTS
(3007) F025  1111000000100101 (  15)                 TRAP  x25
(3008) E08B  1110000010001011 (  19) READ_SCORES     LEA   R0 PROMPT
(3009) F022  1111000000100010 (  20)                 TRAP  x22
(300A) 20E6  0010000011100110 (  21)                 LD    R0 LF
(300B) F021  1111000000100001 (  22)                 TRAP  x21
(300C) 56E0  0101011011100000 (  23)                 AND   R3 R3 #0
(300D) F020  1111000000100000 (  26) INPUT_LOOP      TRAP  x20
(300E) F021  1111000000100001 (  27)                 TRAP  x21
(300F) 4817  0100100000010111 (  28)                 JSR   VALIDATE_DIGIT
(3010) 5920  0101100100100000 (  29)                 AND   R4 R4 #0
(3011) 1830  0001100000110000 (  30)                 ADD   R4 R0 #-16
(3012) 1930  0001100100110000 (  31)                 ADD   R4 R4 #-16
(3013) 1930  0001100100110000 (  32)                 ADD   R4 R4 #-16
(3014) 2ADB  0010101011011011 (  34)                 LD    R5 TEN
(3015) 481C  0100100000011100 (  35)                 JSR   MULTIPLY
(3016) F020  1111000000100000 (  37)                 TRAP  x20
(3017) F021  1111000000100001 (  38)                 TRAP  x21
(3018) 480E  0100100000001110 (  39)                 JSR   VALIDATE_DIGIT
(3019) 5B60  0101101101100000 (  40)                 AND   R5 R5 #0
(301A) 1A30  0001101000110000 (  41)                 ADD   R5 R0 #-16
(301B) 1B70  0001101101110000 (  42)                 ADD   R5 R5 #-16
(301C) 1B70  0001101101110000 (  43)                 ADD   R5 R5 #-16
(301D) 20D3  0010000011010011 (  44)                 LD    R0 LF
(301E) F021  1111000000100001 (  45)                 TRAP  x21
(301F) 1905  0001100100000101 (  47)                 ADD   R4 R4 R5
(3020) 1DBF  0001110110111111 (  50)                 ADD   R6 R6 #-1
(3021) 7980  0111100110000000 (  51)                 STR   R4 R6 #0
(3022) 16E1  0001011011100001 (  53)                 ADD   R3 R3 #1
(3023) 1AFB  0001101011111011 (  54)                 ADD   R5 R3 #-5
(3024) 0601  0000011000000001 (  55)                 BRZP  EXIT_READ_SCORES
(3025) 0FE7  0000111111100111 (  56)                 BRNZP INPUT_LOOP
(3026) 0FDD  0000111111011101 (  59) EXIT_READ_SCORES BRNZP STACK
(3027) 5260  0101001001100000 (  64) VALIDATE_DIGIT  AND   R1 R1 #0
(3028) 1230  0001001000110000 (  65)                 ADD   R1 R0 #-16
(3029) 1270  0001001001110000 (  66)                 ADD   R1 R1 #-16
(302A) 1270  0001001001110000 (  67)                 ADD   R1 R1 #-16
(302B) 0803  0000100000000011 (  68)                 BRN   ERROR_INPUT
(302C) 1277  0001001001110111 (  69)                 ADD   R1 R1 #-9
(302D) 0201  0000001000000001 (  70)                 BRP   ERROR_INPUT
(302E) C1C0  1100000111000000 (  71)                 RET   
(302F) E0AE  1110000010101110 (  74) ERROR_INPUT     LEA   R0 ERMS
(3030) F022  1111000000100010 (  75)                 TRAP  x22
(3031) F025  1111000000100101 (  76)                 TRAP  x25
(3032) 5DA0  0101110110100000 (  80) MULTIPLY        AND   R6 R6 #0
(3033) 1360  0001001101100000 (  81)                 ADD   R1 R5 #0
(3034) 0403  0000010000000011 (  84) MULT_LOOP       BRZ   MULT_DONE
(3035) 1D84  0001110110000100 (  85)                 ADD   R6 R6 R4
(3036) 127F  0001001001111111 (  86)                 ADD   R1 R1 #-1
(3037) 0FFC  0000111111111100 (  87)                 BRNZP MULT_LOOP
(3038) 19A0  0001100110100000 (  90) MULT_DONE       ADD   R4 R6 #0
(3039) C1C0  1100000111000000 (  91)                 RET   
(303A) 56E0  0101011011100000 (  95) PROCESS_STACK   AND   R3 R3 #0
(303B) 6580  0110010110000000 (  96)                 LDR   R2 R6 #0
(303C) 1DA1  0001110110100001 (  97)                 ADD   R6 R6 #1
(303D) 5260  0101001001100000 (  98)                 AND   R1 R1 #0
(303E) 12A0  0001001010100000 (  99)                 ADD   R1 R2 #0
(303F) 10A0  0001000010100000 ( 100)                 ADD   R0 R2 #0
(3040) 18A0  0001100010100000 ( 101)                 ADD   R4 R2 #0
(3041) 6B80  0110101110000000 ( 104) PROCESS_LOOP    LDR   R5 R6 #0
(3042) 1DA1  0001110110100001 ( 105)                 ADD   R6 R6 #1
(3043) 9F7F  1001111101111111 ( 108)                 NOT   R7 R5
(3044) 1FE1  0001111111100001 ( 109)                 ADD   R7 R7 #1
(3045) 1FC1  0001111111000001 ( 110)                 ADD   R7 R7 R1
(3046) 0201  0000001000000001 ( 111)                 BRP   SKIP_MIN
(3047) 1360  0001001101100000 ( 112)                 ADD   R1 R5 #0
(3048) 9E3F  1001111000111111 ( 116) SKIP_MIN        NOT   R7 R0
(3049) 1FE1  0001111111100001 ( 117)                 ADD   R7 R7 #1
(304A) 1FC5  0001111111000101 ( 118)                 ADD   R7 R7 R5
(304B) 0801  0000100000000001 ( 119)                 BRN   SKIP_MAX
(304C) 1160  0001000101100000 ( 120)                 ADD   R0 R5 #0
(304D) 1905  0001100100000101 ( 123) SKIP_MAX        ADD   R4 R4 R5
(304E) 16E1  0001011011100001 ( 124)                 ADD   R3 R3 #1
(304F) 1AFB  0001101011111011 ( 125)                 ADD   R5 R3 #-5
(3050) 0DF0  0000110111110000 ( 126)                 BRNZ  PROCESS_LOOP
(3051) 3279  0011001001111001 ( 129)                 ST    R1 MIN_STORE
(3052) 3079  0011000001111001 ( 130)                 ST    R0 MAX_STORE
(3053) 3879  0011100001111001 ( 131)                 ST    R4 SUM_STORE
(3054) 0FB0  0000111110110000 ( 133)                 BRNZP AVERAGE
(3055) 2A99  0010101010011001 ( 137) CALCULATE_AVERAGE LD    R5 FIVE
(3056) 5DA0  0101110110100000 ( 138)                 AND   R6 R6 #0
(3057) 2875  0010100001110101 ( 140) AVG_LOOP        LD    R4 SUM_STORE
(3058) 193B  0001100100111011 ( 141)                 ADD   R4 R4 #-5
(3059) 0802  0000100000000010 ( 142)                 BRN   AVG_DONE
(305A) 1DA1  0001110110100001 ( 143)                 ADD   R6 R6 #1
(305B) 0FFB  0000111111111011 ( 144)                 BRNZP AVG_LOOP
(305C) 3C71  0011110001110001 ( 147) AVG_DONE        ST    R6 AVG_STORE
(305D) C1C0  1100000111000000 ( 148)                 RET   
(305E) E04B  1110000001001011 ( 152) DISPLAY_RESULTS LEA   R0 MSG_MIN
(305F) F022  1111000000100010 ( 153)                 TRAP  x22
(3060) 206A  0010000001101010 ( 154)                 LD    R0 MIN_STORE
(3061) 480F  0100100000001111 ( 155)                 JSR   PRINT_NUMBER
(3062) 2068  0010000001101000 ( 156)                 LD    R0 MIN_STORE
(3063) 4828  0100100000101000 ( 157)                 JSR   LETTER_GRADE
(3064) E050  1110000001010000 ( 159)                 LEA   R0 MSG_MAX
(3065) F022  1111000000100010 ( 160)                 TRAP  x22
(3066) 2065  0010000001100101 ( 161)                 LD    R0 MAX_STORE
(3067) 4809  0100100000001001 ( 162)                 JSR   PRINT_NUMBER
(3068) 2063  0010000001100011 ( 163)                 LD    R0 MAX_STORE
(3069) 4822  0100100000100010 ( 164)                 JSR   LETTER_GRADE
(306A) E055  1110000001010101 ( 166)                 LEA   R0 MSG_AVG
(306B) F022  1111000000100010 ( 167)                 TRAP  x22
(306C) 2061  0010000001100001 ( 168)                 LD    R0 AVG_STORE
(306D) 4803  0100100000000011 ( 169)                 JSR   PRINT_NUMBER
(306E) 205F  0010000001011111 ( 170)                 LD    R0 AVG_STORE
(306F) 481C  0100100000011100 ( 171)                 JSR   LETTER_GRADE
(3070) C1C0  1100000111000000 ( 173)                 RET   
(3071) 5B60  0101101101100000 ( 177) PRINT_NUMBER    AND   R5 R5 #0
(3072) 2A7D  0010101001111101 ( 178)                 LD    R5 TEN
(3073) 5DA0  0101110110100000 ( 179)                 AND   R6 R6 #0
(3074) 5920  0101100100100000 ( 180)                 AND   R4 R4 #0
(3075) 1C20  0001110000100000 ( 183)                 ADD   R6 R0 #0
(3076) 1DB6  0001110110110110 ( 185) TEN_LOOP        ADD   R6 R6 #-10
(3077) 0802  0000100000000010 ( 186)                 BRN   DONE_TENS
(3078) 1921  0001100100100001 ( 187)                 ADD   R4 R4 #1
(3079) 0FFC  0000111111111100 ( 188)                 BRNZP TEN_LOOP
(307A) 1DAA  0001110110101010 ( 190) DONE_TENS       ADD   R6 R6 #10
(307B) 192F  0001100100101111 ( 193)                 ADD   R4 R4 #15
(307C) 192F  0001100100101111 ( 194)                 ADD   R4 R4 #15
(307D) 192F  0001100100101111 ( 195)                 ADD   R4 R4 #15
(307E) 1923  0001100100100011 ( 196)                 ADD   R4 R4 #3
(307F) 1220  0001001000100000 ( 197)                 ADD   R1 R0 #0
(3080) 1120  0001000100100000 ( 198)                 ADD   R0 R4 #0
(3081) F021  1111000000100001 ( 199)                 TRAP  x21
(3082) 1060  0001000001100000 ( 200)                 ADD   R0 R1 #0
(3083) 1DAF  0001110110101111 ( 203)                 ADD   R6 R6 #15
(3084) 1DAF  0001110110101111 ( 204)                 ADD   R6 R6 #15
(3085) 1DAF  0001110110101111 ( 205)                 ADD   R6 R6 #15
(3086) 1DA3  0001110110100011 ( 206)                 ADD   R6 R6 #3
(3087) 1220  0001001000100000 ( 207)                 ADD   R1 R0 #0
(3088) 11A0  0001000110100000 ( 208)                 ADD   R0 R6 #0
(3089) F021  1111000000100001 ( 209)                 TRAP  x21
(308A) 1060  0001000001100000 ( 210)                 ADD   R0 R1 #0
(308B) C1C0  1100000111000000 ( 211)                 RET   
(308C) E042  1110000001000010 ( 215) LETTER_GRADE    LEA   R0 LETTERS
(308D) 1820  0001100000100000 ( 216)                 ADD   R4 R0 #0
(308E) 0403  0000010000000011 ( 219) LETTER_LOOP     BRZ   DISPLAY_GRADE
(308F) 1022  0001000000100010 ( 220)                 ADD   R0 R0 #2
(3090) 193F  0001100100111111 ( 221)                 ADD   R4 R4 #-1
(3091) 0FFC  0000111111111100 ( 222)                 BRNZP LETTER_LOOP
(3092) F022  1111000000100010 ( 225) DISPLAY_GRADE   TRAP  x22
(3093) C1C0  1100000111000000 ( 226)                 RET   
(3094) 0045  0000000001000101 ( 229) PROMPT          .FILL x0045
(3095) 006E  0000000001101110 ( 229)                 .FILL x006E
(3096) 0074  0000000001110100 ( 229)                 .FILL x0074
(3097) 0065  0000000001100101 ( 229)                 .FILL x0065
(3098) 0072  0000000001110010 ( 229)                 .FILL x0072
(3099) 0020  0000000000100000 ( 229)                 .FILL x0020
(309A) 0035  0000000000110101 ( 229)                 .FILL x0035
(309B) 0020  0000000000100000 ( 229)                 .FILL x0020
(309C) 0065  0000000001100101 ( 229)                 .FILL x0065
(309D) 0078  0000000001111000 ( 229)                 .FILL x0078
(309E) 0061  0000000001100001 ( 229)                 .FILL x0061
(309F) 006D  0000000001101101 ( 229)                 .FILL x006D
(30A0) 0020  0000000000100000 ( 229)                 .FILL x0020
(30A1) 0073  0000000001110011 ( 229)                 .FILL x0073
(30A2) 0063  0000000001100011 ( 229)                 .FILL x0063
(30A3) 006F  0000000001101111 ( 229)                 .FILL x006F
(30A4) 0072  0000000001110010 ( 229)                 .FILL x0072
(30A5) 0065  0000000001100101 ( 229)                 .FILL x0065
(30A6) 0073  0000000001110011 ( 229)                 .FILL x0073
(30A7) 003A  0000000000111010 ( 229)                 .FILL x003A
(30A8) 0020  0000000000100000 ( 229)                 .FILL x0020
(30A9) 0000  0000000000000000 ( 229)                 .FILL x0000
(30AA) 000A  0000000000001010 ( 230) MSG_MIN         .FILL x000A
(30AB) 004D  0000000001001101 ( 230)                 .FILL x004D
(30AC) 0069  0000000001101001 ( 230)                 .FILL x0069
(30AD) 006E  0000000001101110 ( 230)                 .FILL x006E
(30AE) 0069  0000000001101001 ( 230)                 .FILL x0069
(30AF) 006D  0000000001101101 ( 230)                 .FILL x006D
(30B0) 0075  0000000001110101 ( 230)                 .FILL x0075
(30B1) 006D  0000000001101101 ( 230)                 .FILL x006D
(30B2) 003A  0000000000111010 ( 230)                 .FILL x003A
(30B3) 0020  0000000000100000 ( 230)                 .FILL x0020
(30B4) 0000  0000000000000000 ( 230)                 .FILL x0000
(30B5) 000A  0000000000001010 ( 231) MSG_MAX         .FILL x000A
(30B6) 004D  0000000001001101 ( 231)                 .FILL x004D
(30B7) 0061  0000000001100001 ( 231)                 .FILL x0061
(30B8) 0078  0000000001111000 ( 231)                 .FILL x0078
(30B9) 0069  0000000001101001 ( 231)                 .FILL x0069
(30BA) 006D  0000000001101101 ( 231)                 .FILL x006D
(30BB) 0075  0000000001110101 ( 231)                 .FILL x0075
(30BC) 006D  0000000001101101 ( 231)                 .FILL x006D
(30BD) 003A  0000000000111010 ( 231)                 .FILL x003A
(30BE) 0020  0000000000100000 ( 231)                 .FILL x0020
(30BF) 0000  0000000000000000 ( 231)                 .FILL x0000
(30C0) 000A  0000000000001010 ( 232) MSG_AVG         .FILL x000A
(30C1) 0041  0000000001000001 ( 232)                 .FILL x0041
(30C2) 0076  0000000001110110 ( 232)                 .FILL x0076
(30C3) 0065  0000000001100101 ( 232)                 .FILL x0065
(30C4) 0072  0000000001110010 ( 232)                 .FILL x0072
(30C5) 0061  0000000001100001 ( 232)                 .FILL x0061
(30C6) 0067  0000000001100111 ( 232)                 .FILL x0067
(30C7) 0065  0000000001100101 ( 232)                 .FILL x0065
(30C8) 003A  0000000000111010 ( 232)                 .FILL x003A
(30C9) 0020  0000000000100000 ( 232)                 .FILL x0020
(30CA) 0000  0000000000000000 ( 232)                 .FILL x0000
(30CB) 0000  0000000000000000 ( 234) MIN_STORE       .FILL x0000
(30CC) 0000  0000000000000000 ( 235) MAX_STORE       .FILL x0000
(30CD) 0000  0000000000000000 ( 236) SUM_STORE       .FILL x0000
(30CE) 0000  0000000000000000 ( 237) AVG_STORE       .FILL x0000
(30CF) 0046  0000000001000110 ( 241) LETTERS         .FILL x0046
(30D0) 0020  0000000000100000 ( 241)                 .FILL x0020
(30D1) 0000  0000000000000000 ( 241)                 .FILL x0000
(30D2) 0044  0000000001000100 ( 242)                 .FILL x0044
(30D3) 0020  0000000000100000 ( 242)                 .FILL x0020
(30D4) 0000  0000000000000000 ( 242)                 .FILL x0000
(30D5) 0043  0000000001000011 ( 243)                 .FILL x0043
(30D6) 0020  0000000000100000 ( 243)                 .FILL x0020
(30D7) 0000  0000000000000000 ( 243)                 .FILL x0000
(30D8) 0042  0000000001000010 ( 244)                 .FILL x0042
(30D9) 0020  0000000000100000 ( 244)                 .FILL x0020
(30DA) 0000  0000000000000000 ( 244)                 .FILL x0000
(30DB) 0041  0000000001000001 ( 245)                 .FILL x0041
(30DC) 0020  0000000000100000 ( 245)                 .FILL x0020
(30DD) 0000  0000000000000000 ( 245)                 .FILL x0000
(30DE) 0049  0000000001001001 ( 247) ERMS            .FILL x0049
(30DF) 006E  0000000001101110 ( 247)                 .FILL x006E
(30E0) 0076  0000000001110110 ( 247)                 .FILL x0076
(30E1) 0061  0000000001100001 ( 247)                 .FILL x0061
(30E2) 006C  0000000001101100 ( 247)                 .FILL x006C
(30E3) 0069  0000000001101001 ( 247)                 .FILL x0069
(30E4) 0064  0000000001100100 ( 247)                 .FILL x0064
(30E5) 0020  0000000000100000 ( 247)                 .FILL x0020
(30E6) 0069  0000000001101001 ( 247)                 .FILL x0069
(30E7) 006E  0000000001101110 ( 247)                 .FILL x006E
(30E8) 0070  0000000001110000 ( 247)                 .FILL x0070
(30E9) 0075  0000000001110101 ( 247)                 .FILL x0075
(30EA) 0074  0000000001110100 ( 247)                 .FILL x0074
(30EB) 0021  0000000000100001 ( 247)                 .FILL x0021
(30EC) 0000  0000000000000000 ( 247)                 .FILL x0000
(30ED) FDFF  1111110111111111 ( 249) STACK_PTR       .FILL xFDFF
(30EE) FFFB  1111111111111011 ( 250) NEG_FIVE        .FILL xFFFB
(30EF) 0005  0000000000000101 ( 251) FIVE            .FILL x0005
(30F0) 000A  0000000000001010 ( 252) TEN             .FILL x000A
(30F1) 000A  0000000000001010 ( 253) LF              .FILL x000A
